<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/beans ">
  <!--<context:component-scan/> 后，就可以将 <context:annotation-config/> 移除了-->
  <!--引入注解-->
  <!--<context:annotation-config/>-->
  <!--扫描包-->
  <context:component-scan base-package="com.mine.provider"/>

  <!--加载配置文件-->
  <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>/application.properties</value>
      </list>
    </property>
    <!--是否忽略部分xxx-->
    <property name="fileEncoding" value="UTF-8"/>
    <property name="ignoreResourceNotFound" value="true"/>
    <property name="ignoreUnresolvablePlaceholders" value="false"/>
  </bean>

  <!--配置数据源-->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <!-- 基本属性driver、url、user、password -->
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc_url}"/>
    <property name="username" value="${jdbc_user}"/>
    <property name="password" value="${jdbc_password}"/>

    <!-- 配置监控统计拦截的filters -->
    <property name="filters" value="stat"/>

    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="1"/>
    <property name="minIdle" value="1"/>
    <property name="maxActive" value="20"/>

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000"/>

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000"/>

    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>

    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="20"/>
  </bean>

  <!-- 配置事务管理器 -->
  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!--proxy-target-class为设置代理类型，true代表使用cglib代理，默认也是cglib代理-->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="com.mine.provider.entity"/>
    <!--未使用mapper.xml形式的不用配置-->
    <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
    <property name="configLocation" value="classpath:spring/spring-mybatis.xml"/>
  </bean>

  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.mine.provider.mapper"/>
    <!-- 扫描含有特定注解的接口 -->
    <!--<property name="annotationClass" value="annotations.注解名"/>-->
  </bean>

</beans>
